- purchase_orders = purchase_orders || @purchase_orders

table.table.table-bordered.table-striped.mb0 data-sortable="true"
	thead
		tr.bg-thead
			th width="130" data-sortable="false" Invoice No.
			th width="120" Date
			th width="130" Branch
			th width="160" Supplier
			th width="110" Net<br>Amount
			th width="110" VAT<br>Amount
			th width="120" Total<br>Amount
			th width="120" data-sortable="false" Action
/ 	tbody style="font-size:13px"
/ 		- if purchase_orders.empty?
/ 			tr
/ 				td colspan="8"
/ 					p.text-center.mt5 No Records Found

/ 		- purchase_orders.each do |purchase_order|
/ 			- nvt = net_vat_total_computation(purchase_order.purchase_order_items)
/ 			tr
/ 				td data-title="Invoice No." = purchase_order.invoice_number
/ 				td data-title="Date" = purchase_order.purchase_order_date.strftime("%b %d %Y")
/ 				td data-title="Branch" = purchase_order.branch.name
/ 				td data-title="Supplier" = purchase_order.supplier.name
/ 				td data-title="Net Amount" = to_peso(nvt[:net])
/ 				td data-title="VAT Amount" = to_peso(nvt[:vat])
/ 				td data-title="Total Amount" = to_peso(nvt[:total])
/ 				td.action data-title="Action"
/ 					= link_to "<i class='icon-glyph-41 f14'></i>".html_safe, purchase_order_purchase_order_items_path(purchase_order_id: purchase_order.id), class: "btn btn-default btn-xs mb10 mr2", data: { tt: "tooltip", placement: "top", "original-title" => "View Purchase Items" }
/ 					- if view_access_control('purchase_orders','update')
/ 						= link_to "<i class='icon-glyph f14'></i>".html_safe, '#', class: "btn btn-default btn-xs mb10 mr2", data: { tt: "tooltip", placement: "top", "original-title" => "Edit", toggle: "modal", target: ".edit_purchase_order_#{purchase_order.id}" }
/ 					- if view_access_control('purchase_orders','destroy')
/ 						= link_to "<i class='icon-glyph-76 f14'></i>".html_safe, purchase_order_path(purchase_order), method: :delete, class: "btn btn-default btn-xs mb10 mr2 swal-warning-confirm", data: { tt: "tooltip", placement: "top", "original-title" => "Delete", confirm: "Are you sure?" }, remote: true

/ 			div class="modal edit_purchase_order_#{purchase_order.id}" tabindex="-1" role="dialog" aria-hidden="true"
/ 				.modal-dialog
/ 					.modal-content
/ 						.modal-header
/ 							button.close type="button" data-dismiss="modal" aria-hidden="true"
/ 								i.icon-maxicons1-exit
/ 							h4.modal-title Edit Purchase
/ 						.modal-body
/ 							= form_for purchase_order, remote: true do |f|
/ 								.row.mb10
/ 									.col-xs-12
/ 										= f.label :branch_id
/ 											| Branch
/ 											small.field-req *
/ 										= f.select :branch_id, current_brand.branches.pluck(:name,:id), { include_blank: true }, class: "chosen", data: { placeholder: "Select" }, style: "width: 100%; display: none;"
/ 								.row.mb10
/ 									.col-xs-6
/ 										= f.label :invoice_number
/ 											| Invoice number
/ 											small.field-req *
/ 										= f.text_field :invoice_number, class: "form-control"
/ 									.col-xs-6
/ 										= f.label :purchase_order_date
/ 											| Purchase Date
/ 											small.field-req *
/ 										= f.text_field :purchase_order_date, class: "form-control", placeholder: "mm/dd/yyyy", data: { provide: "datepicker" }, value: to_datepicker_format(f.object.purchase_order_date)
/ 								.row.mb10
/ 									.col-xs-12
/ 										= f.label :supplier_id, "Supplier"
/ 											| Supplier
/ 											small.field-req *
/ 										= f.select :supplier_id, @suppliers, { include_blank: true }, class: "chosen", data: { placeholder: "Select" }, style: "width: 100%; display: none;"
/ 								.row.mb10
/ 									.col-xs-12.mt20
/ 										| (
/ 										small.field-req *
/ 										|  )
/ 										i indicates field is required
/ 								.modal-footer.no-border
/ 									span.inline.float-right
/ 										= link_to "Cancel", '#', class: "btn btn-default", data: { dismiss: "modal" }
/ 										|
/ 										= f.submit "Update", class: "btn btn-primary", data: { "disable-wth" => "Updating.." }

/ - if purchase_orders.any?
/ 	.align-center
/ 		p
/ 			= page_entries_info purchase_orders, renderer: BootstrapPagination::Rails
/ 		= will_paginate purchase_orders, renderer: BootstrapPagination::Rails, previous_label: "←", next_label: "→"
