- order_lists = order_lists || @order_lists

table.table.table-bordered.table-striped.mb0 data-sortable="true"
	thead
		tr.bg-thead
			th width="130" data-sortable="false" PR No.
			th width="120" PR Date
			th width="160" Supplier
			th width="160" Status
			th width="120" data-sortable="false" Action
	tbody style="font-size:13px"
		- if order_lists.empty?
			tr
				td colspan="8"
					p.text-center.mt5 No Records Found

		- order_lists.each do |order_list|
			tr
				td data-title="PO No." = order_list.pr_number
				td data-title="PO Date" = order_list.pr_date.nil? ? "---" : order_list.pr_date.strftime("%b %d %Y")
				/ td data-title="Branch" = order_list.branch.name
				td data-title="Supplier" = order_list.supplier.name
				/ td data-title="Net Amount" = to_peso(nvt[:net])
				/ td data-title="VAT Amount" = to_peso(nvt[:vat])
				/ td data-title="Total Amount" = to_peso(nvt[:total])
				td.action data-title="Status" = order_list.status
				td.action data-title="Action"
					= link_to "<i class='icon-glyph-41 f14'></i>".html_safe, order_per_suppliers_path(order_list_id: order_list.id), class: "btn btn-default btn-xs mb10 mr2", data: { tt: "tooltip", placement: "top", "original-title" => "View order_list Items" }
					/ - if view_access_control('order_lists','update')
					= link_to "<i class='icon-glyph f14'></i>".html_safe, '#', class: "btn btn-default btn-xs mb10 mr2", data: { tt: "tooltip", placement: "top", "original-title" => "Edit", toggle: "modal", target: ".edit_order_list_#{order_list.id}" }
					/ - if view_access_control('order_lists','destroy')
					= link_to "<i class='icon-glyph-76 f14'></i>".html_safe, order_list_path(order_list), method: :delete, class: "btn btn-default btn-xs mb10 mr2 swal-warning-confirm", data: { tt: "tooltip", placement: "top", "original-title" => "Delete", confirm: "Are you sure?" }, remote: true
					= link_to "<i class='icon-glyph-23 f14'></i>".html_safe, order_list_update_status_path(order_list, oli: order_list.id), class: "btn btn-default btn-xs mb10 mr2", data: { tt: "tooltip", placement: "top", "original-title" => "Notify Admin" }

			/ div class="modal edit_order_list_#{order_list.id}" tabindex="-1" role="dialog" aria-hidden="true"
			/ 	.modal-dialog
			/ 		.modal-content
			/ 			.modal-header
			/ 				button.close type="button" data-dismiss="modal" aria-hidden="true"
			/ 					i.icon-maxicons1-exit
			/ 				h4.modal-title Edit order_list
			/ 			.modal-body
			/ 				= form_for order_list, remote: true do |f|
			/ 					.row.mb10
			/ 						.col-xs-12
			/ 							= f.label :branch_id
			/ 								| Branch
			/ 								small.field-req *
			/ 							= f.select :branch_id, current_brand.branches.pluck(:name,:id), { include_blank: true }, class: "chosen", data: { placeholder: "Select" }, style: "width: 100%; display: none;"
			/ 					.row.mb10
			/ 						.col-xs-6
			/ 							= f.label :invoice_number
			/ 								| Invoice number
			/ 								small.field-req *
			/ 							= f.text_field :invoice_number, class: "form-control"
			/ 						.col-xs-6
			/ 							= f.label :order_list_date
			/ 								| order_list Date
			/ 								small.field-req *
			/ 							= f.text_field :order_list_date, class: "form-control", placeholder: "mm/dd/yyyy", data: { provide: "datepicker" }, value: to_datepicker_format(f.object.order_list_date)
			/ 					.row.mb10
			/ 						.col-xs-12
			/ 							= f.label :supplier_id, "Supplier"
			/ 								| Supplier
			/ 								small.field-req *
			/ 							= f.select :supplier_id, @suppliers, { include_blank: true }, class: "chosen", data: { placeholder: "Select" }, style: "width: 100%; display: none;"
			/ 					.row.mb10
			/ 						.col-xs-12.mt20
			/ 							| (
			/ 							small.field-req *
			/ 							|  )
			/ 							i indicates field is required
			/ 					.modal-footer.no-border
			/ 						span.inline.float-right
			/ 							= link_to "Cancel", '#', class: "btn btn-default", data: { dismiss: "modal" }
			/ 							|
			/ 							= f.submit "Update", class: "btn btn-primary", data: { "disable-wth" => "Updating.." }

- if order_lists.any?
	.align-center
		p
			= page_entries_info order_lists, renderer: BootstrapPagination::Rails
		= will_paginate order_lists, renderer: BootstrapPagination::Rails, previous_label: "←", next_label: "→"